# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
    mongo.session.options:
        database: %mongodb_database%
        collection: Sessions

services:
    mongo.connection:
        class: MongoDoctrine\MongoDB\Connection
        factory: ["@doctrine.odm.mongodb.document_manager", getConnection]
        calls:
           - [initialize, []]

    mongo:
        class: Mongo
        factory: ["@mongo.connection", getMongo]

    session.handler.mongo:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler
        arguments: ['@mongo', '%mongo.session.options%']

    twig.text_extension:
        class: Twig_Extensions_Extension_Text
        tags:
            - name: twig.extension

    datahub.core.menu_builder:
        class: DataHub\SharedBundle\Menu\MenuBuilder
        arguments: ["@knp_menu.factory", "@security.authorization_checker", "@security.token_storage"]
        tags:
            - { name: knp_menu.menu_builder, method: createMainMenu, alias: main }
            - { name: knp_menu.menu_builder, method: createProfileMenu, alias: profile }
    
    datahub.oai.http_foundation_factory:
        class: Symfony\Bridge\PsrHttpMessage\Factory\HttpFoundationFactory

    datahub.oai.repository:
        class: DataHub\OAIBundle\Repository\Repository
        arguments: ['@datahub.resource_api.repository.default']
        calls:
            - [setRepositoryName, [%datahub_oai_repo_name%]]
            - [setContactEmail, [%datahub_oai_contact_email%]]
            - [setPaginationSize, [%datahub_oai_pagination_num_records%]]
            - method: setBaseUrl
              arguments:
                  - '@request_stack'

    datahub.oauth.oauth:
        class: DataHub\OAuthBundle\Service\OAuthService
        calls:
            - [setTokenStorage, ["@security.token_storage"]]
            - [setDocumentManager, ["@doctrine_mongodb.odm.document_manager"]]
            - [setLogger, ["@logger"]]

    datahub.resource_api.decoder.xml:
        class: DataHub\ResourceAPIBundle\Decoder\XmlDecoder
        arguments: ['@logger', '@datahub.resource.builder.converter.factory']

    datahub.resource_api.repository.default:
        class: DataHub\ResourceAPIBundle\Repository\RecordRepository
        factory: ["@doctrine_mongodb", getRepository]
        arguments: [DataHub\ResourceAPIBundle\Document\Record]

    datahub.resource_api.param_converter.record_converter:
        class: DataHub\ResourceAPIBundle\Request\ParamConverter\RecordParamConverter
        tags:
            - { name: request.param_converter, converter: record_converter }
        arguments: ['@doctrine_mongodb']

    datahub.resource.datatype.datatypeRegister:
        class: DataHub\ResourceBundle\DataType\DataTypeRegister

    datahub.resource.builder.converter.factory:
        class: DataHub\ResourceBundle\Builder\ConverterFactory
        arguments: ["@datahub.resource.datatype.datatypeRegister"]
        calls:
          - ['setConverter', ['%datahub_enabled_data_type%']]

    datahub.resource.datatype.datatypeRegister:
        class: DataHub\ResourceBundle\DataType\DataTypeRegister

    datahub.resource.builder.converter.factory:
        class: DataHub\ResourceBundle\Builder\ConverterFactory
        arguments: ["@datahub.resource.datatype.datatypeRegister"]
        calls:
          - ['setConverter', ['%datahub_enabled_data_type%']]

    datahub.security.login_form_authenticator:
        class: DataHub\UserBundle\Security\LoginFormAuthenticator
        autowire: true

    datahub.security.doctrine.hash_password_listener:
        class: DataHub\UserBundle\Doctrine\HashPasswordListener
        autowire: true
        tags:
            - { name: doctrine_mongodb.odm.event_subscriber }

    datahub.security.user.repository:
        class: DataHub\UserBundle\Repository\UserRepository
        factory: ["@doctrine_mongodb", getRepository]
        arguments: [DataHub\UserBundle\Document\User]

    datahub.security.user_provider.username:
        class: DataHub\UserBundle\Security\UserProvider
        arguments: ["@datahub.security.user.repository"]